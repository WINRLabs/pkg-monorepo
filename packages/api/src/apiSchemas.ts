/**
 * Generated by @openapi-codegen
 *
 * @version 2.0
 */
export type GameResultDto = {
  id: string;
  game:
    | 1
    | 2
    | 3
    | 4
    | 5
    | 6
    | 7
    | 8
    | 9
    | 10
    | 11
    | 12
    | 13
    | 14
    | 15
    | 16
    | 17
    | 18
    | 19
    | 20;
  /**
   * @default 0
   */
  wager: number;
  /**
   * @default 0
   */
  wagerInDollar: number;
  /**
   * @default 0
   */
  playedGameCount: number;
  /**
   * @default 0
   */
  multiplier: number;
  /**
   * @default 0
   */
  profit: number;
  /**
   * @default 0
   */
  profitInDollar: number;
  /**
   * @default 0
   */
  payout: number;
  /**
   * @default 0
   */
  payoutInDollar: number;
  /**
   * @default 0
   */
  loss: number;
  /**
   * @default 0
   */
  lossInDollar: number;
  won: boolean;
  player: string;
  requestId: number;
  token: string;
  amountOut: number;
  username: string;
  time: number;
  /**
   * @default null
   */
  hash?: string | null;
  createdAt: number;
};

export type ChartObject = {
  x?: string | null;
  y?: number | null;
};

export type TransactionResponse = {
  success: boolean;
  message: string;
};

export type AssignUsernameInput = {
  username: string;
  walletAddress: string;
  signature: string;
  avatar?: number | null;
};

export type UsernameObject = {
  username?: string | null;
  activeSince?: number | null;
  avatar?: number | null;
};

export type MultiplayerGameHistoryObject = {
  /**
   * @default 0
   */
  result: number;
};

export type RefundInput = {
  game:
    | 1
    | 2
    | 3
    | 4
    | 5
    | 6
    | 7
    | 8
    | 9
    | 10
    | 11
    | 12
    | 13
    | 14
    | 15
    | 16
    | 17
    | 18
    | 19
    | 20;
  player: string;
};

export type JustBetStats = {
  profitShared: number;
  totalVolume: number;
  gameCount: number;
  bankrollProfit: number;
  playerCount: number;
};

export type MiningStatistics = {
  /**
   * @default 0
   */
  totalBurned: number;
  /**
   * @default 0
   */
  totalStaked: number;
  /**
   * @default 0
   */
  totalSupply: number;
};

export type ReferralRewardEntity = {
  bankroll: string;
  client: string;
  code: string;
  owner: string;
  reward: number;
  rewardInDollar: number;
  volume: number;
  tokenAddress: string;
};

export type ReferralClaimEntity = {
  bankroll: string;
  token: string;
  code: string;
  recipient: string;
  /**
   * @default 0
   */
  payin: number;
  /**
   * @default 0
   */
  payout: number;
};

export type CodesVolumeAndReward = {
  code: string;
  totalVolume: number;
  totalReward: number;
};
